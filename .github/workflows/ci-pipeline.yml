name: CI Pipeline

on:
  push:
    branches:
      - master  # Изменили main на master
  pull_request:
    branches:
      - master  # Изменили main на master

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Шаг 1: Клонируем репозиторий
      - name: Checkout repository
        uses: actions/checkout@v4

      # Шаг 2: Отладка - выведем структуру директорий
      - name: Debug directory structure
        run: |
          pwd
          ls -la
          find . -type f

      # Шаг 3: Устанавливаем Java 11
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'

      # Шаг 4: Отладка - проверим Java и Maven
      - name: Debug Java and Maven versions
        run: |
          java -version
          mvn -version

      # Шаг 5: Устанавливаем Maven и кэшируем зависимости
      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Шаг 6: Запускаем Maven тесты
      - name: Run Maven tests
        run: mvn clean test

      # Шаг 7: Устанавливаем Python 3.8
      - name: Set up Python 3.8
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'

      # Шаг 8: Отладка - проверим Python
      - name: Debug Python version
        run: |
          python --version
          pip --version

      # Шаг 9: Устанавливаем Python-зависимости
      - name: Install Python dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      # Шаг 10: Проверяем запуск Flask API (без полной инициализации)
      - name: Verify Flask API setup
        run: |
          source venv/bin/activate
          python src/main/python/api/CallDiagnosis_api.py --help || echo "Flask API script is accessible"